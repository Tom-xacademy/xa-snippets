{
    "XAReactClass": {
        "prefix": "cc",
        "body": [
            "import React from \"react\";",
            "import IError from \"../../../Interfaces/IError\";",
            "",
            "export type I${0}Props = {}",
            "",
            "export interface I${0}State {",
            "    loading: boolean;",
            "    error: IError;",
            "}",
            "",
            "class ${0} extends React.Component<I${0}Props, I${0}State> {",
            "    state: I${0}State = {",
            "        loading: true,",
            "        error: null,",
            "    };",
            "",
            "    render() {",
            "        return (",
            "           <div>",
            "               ",
            "           </div>",
            "        );",
            "    }",
            "}",
            "",
            "export default ${0};"
        ],
        "description": "Generates a react class component."
    },
    "XAReactClassRedux": {
        "prefix": "ccr",
        "body": [
            "import React from \"react\";",
            "import { connect } from \"react-redux\";",
            "import IError from \"../../../Interfaces/IError\";",
            "",
            "export type I${0}Props = IReduxState & IReduxAction & {}",
            "",
            "export interface I${0}State {",
            "    loading: boolean;",
            "    error: IError;",
            "}",
            "",
            "class ${0} extends React.Component<I${0}Props, I${0}State> {",
            "    state: I${0}State = {",
            "        loading: true,",
            "        error: null,",
            "    };",
            "",
            "    render() {",
            "        return (",
            "           <div>",
            "               ",
            "           </div>",
            "        );",
            "    }",
            "}",
            "",
            "interface IReduxState {}",
            "",
            "const mstp = (state, {}): IReduxState => {return {}};",
            "",
            "interface IReduxAction {}",
            "",
            "const mdtp = (dispatch, {}): IReduxAction => {return {}};",
            "",
            "export default connect(mstp,mdtp)(${0});"
        ],
        "description": "Generates a react class component with redux."
    },
    "XAReactRedux": {
        "prefix": "redux",
        "body": [
            "interface IReduxState {}",
            "",
            "const mstp = (state, {}): IReduxState => {return {}};",
            "",
            "interface IReduxAction {}",
            "",
            "const mdtp = (dispatch, {}): IReduxAction => {return {}};",
            "",
            "export default connect(mstp,mdtp)(${0});"
        ],
        "description": "Generates a react class component with redux"
    },
    "XAConnect": {
        "prefix": "conn",
        "body": "[import { connect } from \"react-redux\";]",
        "description": "Imports the { connect } from react-redux."
    },
    "XAErrorProp": {
        "prefix": "er",
        "body": "[error={${1}props.error}]",
        "description": "Generates error={props.error}."
    },
    "XAReactStatelessComponentInheritor": {
        "prefix": "sfci",
        "body": [
            "import React from \"react\";",
            "import {I${0}Props, I${0}State} from \"../Controller/${0}\"",
            "",
            "export type I${1}Props = I${0}Props & I${0}State & {};",
            "",
            "const ${1}: React.FC<I${1}Props> = (props): React.ReactElement => {",
            "    return (",
            "       <div>",
            "           ",
            "       </div>",
            "    );",
            "}",
            "",
            "export default ${1};"
        ],
        "description": "Generates a react function component which inherits cloned props and state from parent component."
    },
    "XAReactStatelessComponent": {
        "prefix": "sfc",
        "body": [
            "import React from \"react\";",
            "",
            "export interface I${0}Props {};",
            "",
            "const ${0}: React.FC<I${0}Props> = (props): React.ReactElement => {",
            "    return (",
            "        <div>",
            "            ",
            "        </div>",
            "    );",
            "}",
            "",
            "export default ${0};"
        ],
        "description": "Generates a react function component which inherits cloned props and state from parent component."
    },
    "XAReactFunctionCmpRedux": {
        "prefix": "sfcr",
        "body": [
            "import React from \"react\";",
            "import { connect } from \"react-redux\";",
            "import IError from \"../../../Interfaces/IError\";",
            "",
            "export type I${0}Props = IReduxState & IReduxAction & {}",
            "",
            "const ${0}: React.FC<I${0}Props> = (props): React.ReactElement => {",
            "    return (",
            "       <div>",
            "            ",
            "       </div>",
            "    );",
            "}",
            "",
            "interface IReduxState {}",
            "",
            "const mstp = (state, {}): IReduxState => {return {}};",
            "",
            "interface IReduxAction {}",
            "",
            "const mdtp = (dispatch, {}): IReduxAction => {return {}};",
            "",
            "export default connect(mstp,mdtp)(${0});"
        ],
        "description": "Generates a react function component with redux."
    },
    "XAReactReducer": {
        "prefix": "reducer",
        "body": [
            "import types from \"../../Store/actions/actionTypes\";",
            "import IActions from \"../../Interfaces/IActions\"",
            "",
            "export interface I${1}State {}",
            "",
            "function Init(): I${1}State {",
            "    return {}",
            "}",
            "",
            "interface I${1}Actions extends IActions, I${1}State {}",
            "",
            "const ${1} = (state: I${1}State = Init(), action: I${1}Actions): I${1}State => {",
            "    switch(action.type) {",
            "        case types.${0}:",
            "            return {...state, ...{}}",
            "        default: return state;",
            "    }",
            "}",
            "",
            "export default ${1};"
        ],
        "description": "Generates a react function component which inherits cloned props and state from parent component."
    },
    "XAReactDAO": {
        "prefix": "dao",
        "body": [
            "import axios from \"../axios\"",
            "import {AxiosPromise, AxiosResponse} from \"axios\"",
            "",
            "export default abstract class ${1}DAO {",
            "    private static readonly base: string = \"${2}\"",
            "",
            "    public static async ${3}(): Promise<${4}> {}",
            "}"
        ],
        "description": "Generates a Data Access Object for an API."
    },
    "XAReactComponentDAO": {
        "prefix": "cdao",
        "body": [
            "import axios from \"../../Api/axios\"",
            "import { AxiosPromise, AxiosResponse } from \"axios\"",
            "",
            "export default abstract class ${1}DAO {",
            "    private static readonly base: string = \"${2}\"",
            "",
            "    public static async ${3}(): Promise<${4}> {}",
            "}"
        ],
        "description": "Generates a Data Access Object for an API in a component folder."
    },
    "XAReactModel": {
        "prefix": "model",
        "body": [
            "import dataSetter from \"../../Utils/ModelValueSetter\";",
            "",
            "export default class ${1}Model {",
            "",
            "    constructor(${2}?: I${2}) {",
            "        if (${2}) {",
            "            for (let property in ${2}) {",
            "                this[property] = dataSetter(this[property], ${2}[property]);",
            "            }",
            "        }",
            "    }",
            "}"
        ],
        "description": "Generates a Model."
    },
    "XAReactFactory": {
        "prefix": "mf",
        "body": [
            "export default abstract class ${1}Factory {",
            "",
            "    public static createList(${1}: I${1}): I${1}ModelList {",
            "        const ${2}List = I${1}ModelList = []",
            "",
            "        for (let key in ${1}) {",
            "           const ${3}: ${4} = new ${4}(${1});",
            "",
            "            ${2}List.push(${3});",
            "        }",
            "",
            "        return ${2}List",
            "    }",
            "}"
        ],
        "description": "Generates a Model factory."
    },
    "XAReactInterface": {
        "prefix": "inf",
        "body": ["export interface ${0} {}"],
        "description": "Generates an interface."
    },
    "XAReactSetState": {
        "prefix": "ss",
        "body": ["this.setState({${1}: ${2}});"],
        "description": "Generates a setState function."
    },
    "XAReactSetStateCB": {
        "prefix": "ssc",
        "body": ["this.setState({${1}: ${2}}, () => {${3}});"],
        "description": "Generates a setState function with a callback."
    },
    "XAReactFunction": {
        "prefix": "fnc",
        "body": ["const ${1} = (): ${2} => {", "    ${3}", "};"],
        "description": "Generates a named function."
    },
    "XAExportReactFunction": {
        "prefix": "efnc",
        "body": ["export const ${1} = (): ${2} => {", "    ${3}", "};"],
        "description": "Generates an exported and named function."
    },
    "XAReactMathF": {
        "prefix": "floor",
        "body": ["Math.floor(${1});"],
        "description": "Generates a Math.floor() function."
    },
    "XAUseState": {
        "prefix": "ust",
        "body": ["const [${1}, set_${1}] = React.useState(${2});"],
        "description": "Generates a React.useState() function."
    },
    "XAUseEffect": {
        "prefix": "usef",
        "body": [
            "React.useEffect(() => {",
            "    ${2}",
            "    return () => {}",
            "}, [${1}]);"
        ],
        "description": "Generates a React.useEffect() function."
    },
    "XADocs": {
        "prefix": "doc",
        "body": ["/**", " * ## ${0}", " */"],
        "description": "Generates a documentation comments. /** ... */"
    },
    "XACDM": {
        "prefix": "cdm",
        "body": ["componentDidMount() {", "    ${0}", "}"],
        "description": "Generates a componentDidMount lifecycle method."
    },
    "XACDU": {
        "prefix": "cdu",
        "body": [
            "// https://reactjs.org/docs/react-component.html#componentdidupdate",
            "componentDidUpdate(prevProps: I${1}, prevState: I${1}) {",
            "    ${2}",
            "}"
        ],
        "description": "Generates a componentDidUpdate lifecycle method."
    },
    "XADeriv": {
        "prefix": "deriv",
        "body": [
            "// https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops",
            "static getDerivedStateFromProps(props: I${1}, state: I${1}) {",
            "    ${2}",
            "    return state;",
            "}"
        ],
        "description": "Generates a componentDidMount lifecycle method."
    },
    "XADAOFoo": {
        "prefix": "daofoo",
        "body": [
            "public static async ${1} (): Promise<${2}> {",
            "    const request: AxiosPromise = axios.getInstance().${3}",
            "    const response: AxiosResponse = await request;",
            "    ",
            "}"
        ],
        "description": "Generates a componentDidMount lifecycle method."
    }
}
